{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "54ddb57f-a528-4562-8740-28ae0b84f5b8",
   "metadata": {},
   "outputs": [],
   "source": [
    "pip install deep-translator\n",
    "from deep_translator import GoogleTranslator\n",
    "import requests\n",
    "import json\n",
    "\n",
    "# Translate Swahili to English\n",
    "swahili_text = \"tufanye mapenzi bila kinga\"\n",
    "translated = GoogleTranslator(source='sw', target='en').translate(swahili_text)\n",
    "print(\"üìù Translated to English:\", translated)\n",
    "\n",
    "# Analyze with Perspective API\n",
    "API_KEY = \"***\"\n",
    "url = f\"https://commentanalyzer.googleapis.com/v1alpha1/comments:analyze?key={API_KEY}\"\n",
    "\n",
    "data = {\n",
    "    \"comment\": {\"text\": translated},\n",
    "    \"languages\": [\"en\"],\n",
    "    \"requestedAttributes\": {\n",
    "        \"TOXICITY\": {}, \n",
    "        \"SEXUALLY_EXPLICIT\": {}, \n",
    "        \"INSULT\": {}, \n",
    "        \"THREAT\": {}\n",
    "    }\n",
    "}\n",
    "\n",
    "headers = {\"Content-Type\": \"application/json\"}\n",
    "response = requests.post(url, data=json.dumps(data), headers=headers)\n",
    "\n",
    "# Explanation mappings\n",
    "explanations = {\n",
    "    \"SEXUALLY_EXPLICIT\": \"This message is trying to make you post more of your body or private pictures. This is not safe. It's not your fault ‚Äî talk to someone you trust.\",\n",
    "    \"TOXICITY\": \"This comment has mean or disrespectful words. It might be meant to hurt your feelings. Please don‚Äôt keep it to yourself.\",\n",
    "    \"INSULT\": \"This message contains rude or mocking language. You deserve to be spoken to with respect.\",\n",
    "    \"THREAT\": \"This message sounds dangerous. If anyone is threatening you, please tell a trusted adult right away.\"\n",
    "}\n",
    "\n",
    "# Show results and guidance\n",
    "if response.status_code == 200:\n",
    "    results = response.json()[\"attributeScores\"]\n",
    "    print(\"\\nüîç Analysis Results:\")\n",
    "    for attr, score_info in results.items():\n",
    "        score = score_info[\"summaryScore\"][\"value\"]\n",
    "        print(f\"{attr}: {round(score * 100, 2)}%\")\n",
    "        if score >= 0.55:\n",
    "            print(f\"üí¨ Explanation: {explanations[attr]}\")\n",
    "else:\n",
    "    print(\"‚ùå API Error:\", response.text)\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
